// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetCovid19ReportDataHandlerFunc turns a function with the right signature into a get covid19 report data handler
type GetCovid19ReportDataHandlerFunc func(GetCovid19ReportDataParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetCovid19ReportDataHandlerFunc) Handle(params GetCovid19ReportDataParams) middleware.Responder {
	return fn(params)
}

// GetCovid19ReportDataHandler interface for that can handle valid get covid19 report data params
type GetCovid19ReportDataHandler interface {
	Handle(GetCovid19ReportDataParams) middleware.Responder
}

// NewGetCovid19ReportData creates a new http.Handler for the get covid19 report data operation
func NewGetCovid19ReportData(ctx *middleware.Context, handler GetCovid19ReportDataHandler) *GetCovid19ReportData {
	return &GetCovid19ReportData{Context: ctx, Handler: handler}
}

/*GetCovid19ReportData swagger:route GET /covid19 getCovid19ReportData

GetCovid19ReportData get covid19 report data API

*/
type GetCovid19ReportData struct {
	Context *middleware.Context
	Handler GetCovid19ReportDataHandler
}

func (o *GetCovid19ReportData) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetCovid19ReportDataParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
